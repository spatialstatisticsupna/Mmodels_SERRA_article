rm(list = ls())
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub/Dowry_JRSSA_article/R")
load("../data/data.RData")
rm(list = ls())
library(spdep); library(INLA); library(tmap)
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub")
load("data/data.RData")
load("Dowry_JRSSA_article/data/data.RData")
data$exp<- data$pop_linear * (sum(data$obs)/sum(data$pop_linear))
data$smr<- data$obs/data$exp
## Identifiers: "ID_area", "ID_year" and "ID_area_year"
ID<- data.frame(dist=carto_up$dist, ID_area=carto_up$ID_area)
data<- merge(data, ID, by=c("dist"))
data <- data[order(data$year, data$ID_area),]; rownames(data)<-NULL
data$ID_year<- rep(1:length(unique(data$year)), each=length(unique(data$ID_area)))
data$ID_area_year<-seq(1,length(unique(data$ID_year))*length(unique(data$ID_area)))
## Number of areas and number of time periods
n<- length(unique(data$ID_area))
t<- length(unique(data$ID_year))
## Initial and final time periods
t.from<- min(data$year)
t.to<- max(data$year)
## Standardized of covariates
for(i in 1:6){ eval(parse(text= paste0("data$x",i,"_stand<- scale(data$x",i,")" ))) }
## Spatial neighborhood matrix (Q_{xi})
spdep::nb2INLA("uttar_pradesh_nb.graph", spdep::poly2nb(carto_up))
g <- INLA::inla.read.graph("uttar_pradesh_nb.graph")
Q_xi <- matrix(0, g$n, g$n)
for (i in 1:g$n){
Q_xi[i,i]=g$nnbs[[i]]
Q_xi[i,g$nbs[[i]]]=-1
}
## Structure matrix to implement the LCAR prior.
Q_Leroux <- diag(n)-Q_xi
## Temporal structure matrix for a RW1 prior
D1 <- diff(diag(t), differences=1)
Q_gammaRW1 <- t(D1)%*%D1
## Temporal structure matrix for a RW2 prior
D2 <- diff(diag(t),differences=2)
Q_gammaRW2 <- t(D2)%*%D2
## fc risk
R<- sum(data$obs)/sum(data$pop_linear)
fc.risks<-function(x){ x/R }
####################################
#######################################################################################################
## Define appropriate hyperprior distributions (for LCAR)
sdunif="expression:
logdens=-log_precision/2;
return(logdens)"
lunif = "expression:
a = 1;
b = 1;
beta = exp(theta)/(1+exp(theta));
logdens = lgamma(a+b)-lgamma(a)-lgamma(b)+(a-1)*log(beta)+(b-1)*log(1-beta);
log_jacobian = log(beta*(1-beta));
return(logdens+log_jacobian)"
## Define appropriate constraint matrices
id_nt<-diag(1,nrow=n*t)
R_1_2 <- kronecker(Q_gammaRW1,diag(n)); r_def_1_2 <- n;   A_constr_1_2 <- kronecker(matrix(1,1,t),diag(n))
R_1_2_scaled<- R_1_2*exp(mean(log(diag(INLA:::inla.ginv(R_1_2)))))
R_2_2 <- kronecker(Q_gammaRW2,diag(n)); r_def_2_2 <- 2*n; A_constr_2_2 <- kronecker(matrix(1,1,t),diag(n))
R_2_2_scaled<- R_2_2*exp(mean(log(diag(INLA:::inla.ginv(R_2_2)))))
R_0_3 <- kronecker(diag(t),Q_xi); r_def_0_3 <- t; A_constr_0_3 <- kronecker(diag(t),matrix(1,1,n))
R_0_3_scaled<- R_0_3*exp(mean(log(diag(INLA:::inla.ginv(R_0_3)))))
R_1_3 <- kronecker(diag(t),Q_xi); r_def_1_3 <- t; A_constr_1_3 <- kronecker(diag(t),matrix(1,1,n))
R_1_3_scaled<- R_1_3*exp(mean(log(diag(INLA:::inla.ginv(R_1_3)))))
R_2_3 <- kronecker(diag(t),Q_xi); r_def_2_3 <- t; A_constr_2_3 <- kronecker(diag(t),matrix(1,1,n))
R_2_3_scaled<- R_2_3*exp(mean(log(diag(INLA:::inla.ginv(R_2_3)))))
R_1_4 <- kronecker(Q_gammaRW1,Q_xi); r_def_1_4 <- n+t-1;   A.1.1 <- kronecker(matrix(1,1,t),diag(n)); A.1.2 <- kronecker(diag(t),matrix(1,1,n)); A_constr_1_4 <- rbind(A.1.1,A.1.2)
R_1_4_scaled<- R_1_4*exp(mean(log(diag(INLA:::inla.ginv(R_1_4)))))
R_2_4 <- kronecker(Q_gammaRW2,Q_xi); r_def_2_4 <- 2*n+t-2; A.2.1 <- kronecker(matrix(1,1,t),diag(n)); A.2.2 <- kronecker(diag(t),matrix(1,1,n)); A_constr_2_4 <- rbind(A.2.1,A.2.2)
R_2_4_scaled<- R_2_4*exp(mean(log(diag(INLA:::inla.ginv(R_2_4)))))
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code")
rm(list = ls())
library(spdep); library(INLA); library(tmap)
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub/Dowry_JRSSA_article/R")
load("data/data.RData")
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub/Dowry_JRSSA_article/R")
load("Dowry_JRSSA_article/data/data.RData")
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub")
load("Dowry_JRSSA_article/data/data.RData")
data$exp<- data$pop_linear * (sum(data$obs)/sum(data$pop_linear))
data$smr<- data$obs/data$exp
## Identifiers: "ID_area", "ID_year" and "ID_area_year"
ID<- data.frame(dist=carto_up$dist, ID_area=carto_up$ID_area)
data<- merge(data, ID, by=c("dist"))
data <- data[order(data$year, data$ID_area),]; rownames(data)<-NULL
data$ID_year<- rep(1:length(unique(data$year)), each=length(unique(data$ID_area)))
data$ID_area_year<-seq(1,length(unique(data$ID_year))*length(unique(data$ID_area)))
## Number of areas and number of time periods
n<- length(unique(data$ID_area))
t<- length(unique(data$ID_year))
## Initial and final time periods
t.from<- min(data$year)
t.to<- max(data$year)
## Standardized of covariates
for(i in 1:6){ eval(parse(text= paste0("data$x",i,"_stand<- scale(data$x",i,")" ))) }
## Spatial neighborhood matrix (Q_{xi})
spdep::nb2INLA("uttar_pradesh_nb.graph", spdep::poly2nb(carto_up))
g <- INLA::inla.read.graph("uttar_pradesh_nb.graph")
Q_xi <- matrix(0, g$n, g$n)
for (i in 1:g$n){
Q_xi[i,i]=g$nnbs[[i]]
Q_xi[i,g$nbs[[i]]]=-1
}
## Structure matrix to implement the LCAR prior.
Q_Leroux <- diag(n)-Q_xi
## Temporal structure matrix for a RW1 prior
D1 <- diff(diag(t), differences=1)
Q_gammaRW1 <- t(D1)%*%D1
## Temporal structure matrix for a RW2 prior
D2 <- diff(diag(t),differences=2)
Q_gammaRW2 <- t(D2)%*%D2
## fc risk
R<- sum(data$obs)/sum(data$pop_linear)
fc.risks<-function(x){ x/R }
##########################
#################################################################################################################
## Define appropriate hyperprior distributions (for LCAR)
sdunif="expression:
logdens=-log_precision/2;
return(logdens)"
lunif = "expression:
a = 1;
b = 1;
beta = exp(theta)/(1+exp(theta));
logdens = lgamma(a+b)-lgamma(a)-lgamma(b)+(a-1)*log(beta)+(b-1)*log(1-beta);
log_jacobian = log(beta*(1-beta));
return(logdens+log_jacobian)"
## Define appropriate constraint matrices
id_nt<-diag(1,nrow=n*t)
R_1_2 <- kronecker(Q_gammaRW1,diag(n)); r_def_1_2 <- n;   A_constr_1_2 <- kronecker(matrix(1,1,t),diag(n))
R_1_2_scaled<- R_1_2*exp(mean(log(diag(INLA:::inla.ginv(R_1_2)))))
R_2_2 <- kronecker(Q_gammaRW2,diag(n)); r_def_2_2 <- 2*n; A_constr_2_2 <- kronecker(matrix(1,1,t),diag(n))
R_2_2_scaled<- R_2_2*exp(mean(log(diag(INLA:::inla.ginv(R_2_2)))))
R_0_3 <- kronecker(diag(t),Q_xi); r_def_0_3 <- t; A_constr_0_3 <- kronecker(diag(t),matrix(1,1,n))
R_0_3_scaled<- R_0_3*exp(mean(log(diag(INLA:::inla.ginv(R_0_3)))))
R_1_3 <- kronecker(diag(t),Q_xi); r_def_1_3 <- t; A_constr_1_3 <- kronecker(diag(t),matrix(1,1,n))
R_1_3_scaled<- R_1_3*exp(mean(log(diag(INLA:::inla.ginv(R_1_3)))))
R_2_3 <- kronecker(diag(t),Q_xi); r_def_2_3 <- t; A_constr_2_3 <- kronecker(diag(t),matrix(1,1,n))
R_2_3_scaled<- R_2_3*exp(mean(log(diag(INLA:::inla.ginv(R_2_3)))))
R_1_4 <- kronecker(Q_gammaRW1,Q_xi); r_def_1_4 <- n+t-1;   A.1.1 <- kronecker(matrix(1,1,t),diag(n)); A.1.2 <- kronecker(diag(t),matrix(1,1,n)); A_constr_1_4 <- rbind(A.1.1,A.1.2)
R_1_4_scaled<- R_1_4*exp(mean(log(diag(INLA:::inla.ginv(R_1_4)))))
R_2_4 <- kronecker(Q_gammaRW2,Q_xi); r_def_2_4 <- 2*n+t-2; A.2.1 <- kronecker(matrix(1,1,t),diag(n)); A.2.2 <- kronecker(diag(t),matrix(1,1,n)); A_constr_2_4 <- rbind(A.2.1,A.2.2)
R_2_4_scaled<- R_2_4*exp(mean(log(diag(INLA:::inla.ginv(R_2_4)))))
## Load formulas
source("inla_formulas.R")
load("../resul/models_nit_x156_stand.Rdata")
models
load("../resul/models_nit_x0123456_stand.Rdata")      ## models_all
model<- models$icar.rw1.t2
table.s1<- as.data.frame(round(models_all$icar.rw1.t2$summary.fixed[, c(1,2,4,3,5)],3))
colnames(table.s1)<- c("mean", "sd", "median", "q.025", "q.975")
rownames(table.s1)<- c("alpha (x0 BJP)", "x0 (BSP)", "x0 (SP)", "x1 (sex ratio)", "x2 (population density)", "x3 (female literacy)",
"x4 (per capita income)", "x5 (murders)", "x6 (burglaries)")
table.s1
table.s1
table.s1
rm(list=c("x_table"))
models_s2<- list(lcar.rw1.ad=models$lcar.rw1.ad, lcar.rw2.ad=models$lcar.rw2.ad, bym2.rw1.ad=models$bym2.rw1.ad, bym2.rw2.ad=models$bym2.rw2.ad,
dcar.rw1.ad=models$dcar.rw1.ad, dcar.rw2.ad=models$dcar.rw2.ad, icar.rw1.ad=models$icar.rw1.ad, icar.rw2.ad=models$icar.rw2.ad,
lcar.rw1.t1=models$lcar.rw1.t1, lcar.rw2.t1=models$lcar.rw2.t1, bym2.rw1.t1=models$bym2.rw1.t1, bym2.rw2.t1=models$bym2.rw2.t1,
dcar.rw1.t1=models$dcar.rw1.t1, dcar.rw2.t1=models$dcar.rw2.t1, icar.rw1.t1=models$icar.rw1.t1, icar.rw2.t1=models$icar.rw2.t1,
lcar.rw1.t2=models$lcar.rw1.t2, lcar.rw2.t2=models$lcar.rw2.t2, bym2.rw1.t2=models$bym2.rw1.t2, bym2.rw2.t2=models$bym2.rw2.t2,
dcar.rw1.t2=models$dcar.rw1.t2, dcar.rw2.t2=models$dcar.rw2.t2, icar.rw1.t2=models$icar.rw1.t2, icar.rw2.t2=models$icar.rw2.t2,
lcar.rw1.t3=models$lcar.rw1.t3, lcar.rw2.t3=models$lcar.rw2.t3, bym2.rw1.t3=models$bym2.rw1.t3, bym2.rw2.t3=models$bym2.rw2.t3,
dcar.rw1.t3=models$dcar.rw1.t3, dcar.rw2.t3=models$dcar.rw2.t3, icar.rw1.t3=models$icar.rw1.t3, icar.rw2.t3=models$icar.rw2.t3,
lcar.rw1.t4=models$lcar.rw1.t4, lcar.rw2.t4=models$lcar.rw2.t4, bym2.rw1.t4=models$bym2.rw1.t4, bym2.rw2.t4=models$bym2.rw2.t4,
dcar.rw1.t4=models$dcar.rw1.t4, dcar.rw2.t4=models$dcar.rw2.t4, icar.rw1.t4=models$icar.rw1.t4, icar.rw2.t4=models$icar.rw2.t4)
table.s2<- matrix(NA, nrow=length(models_s2), ncol=5)
colnames(table.s2)<-c("Mean Post D","pD","DIC","WAIC","LS")
random.effect<- strsplit(names(models_s2),".", fixed = TRUE)
spatemp<-spat<-temp<-c()
for(i in 1:length(models_s2)){
aux<-models_s2[[i]]
table.s2[i,]<-round(c(aux$dic$mean.deviance, aux$dic$p.eff, aux$dic$dic, aux$waic$waic, -mean(log(aux$cpo$cpo),na.rm=T)), 3)
spatemp[i]<- random.effect[[i]][3]
spat[i]<- random.effect[[i]][1]
temp[i]<- random.effect[[i]][2]
}
table.s2<-as.data.frame(table.s2)
table.s2<-cbind(spatemp, spat, temp, table.s2)
table.s2
rm(list = ls())
library(spdep); library(INLA); library(tmap)
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub")
load("Dowry_JRSSA_article/data/data.RData")
names(carto india)
names(carto_india)
plot(carto_india)
carto_india$ID_area
names(data)
rm(list = ls())
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub")
load("../data.RData")
names(data)
rm(list = ls())
library(spdep); library(INLA); library(tmap)
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub")
load("Dowry_JRSSA_article/data/data.RData")
load("Dowry_JRSSA_article/R/data.RData")
names(data)
data[,c("dist", "year", "state", "obs", "pop_linear", "x0", "x1", "x2", "x3", "x4", "x5", "x6")]
ID<- data.frame(dist=carto_up$dist, ID_area=carto_up$ID_area)
data<- merge(data, ID, by=c("dist"))
data
data[,c("dist", "year", "state", "obs", "pop_linear", "x1", "x5", "x6")]
data<- data[,c("dist", "year", "state", "obs", "pop_linear", "x1", "x5", "x6")]
getwd()
getwd()
save(data, carto_india, carto_up, rates_india, file = "data_JRSSA.RData")
rm(list = ls())
load("Dowry_JRSSA_article/R/data_JRSSA.RData")
rm(list = ls())
rm(list = ls())
setwd("D:/Gonzalo/uttar-pradesh-dowry-deaths/revision _4_round/R_code/code_GitHub/Dowry_JRSSA_article/R")
load("data_JRSSA.RData")
rm(list = ls())
load("Dowry_JRSSA_article/R/data_JRSSA.RData")
load("data_JRSSA.RData"
)
names(data)
rm(list = ls())
load("Dowry_JRSSA_article/R/data_JRSSA.RData")
load("data_JRSSA.RData")
names(data)
rm(list = ls())
setwd("D:/Gonzalo/Multivariado/district-multi/comparacion_INLAMSM_WinBUGS_FINAL/spato_temporal/codigo_GitHub")
load("dataMmodel.RData")
setwd("D:/Gonzalo/Multivariado/district-multi/comparacion_INLAMSM_WinBUGS_FINAL/spato_temporal/codigo_GitHub/R")
load("dataMmodel.RData")
names(data)
Mzz
View(data)
rm(list=ls())
setwd("D:/Gonzalo/Multivariado/uttar-pradesh-multi")
library(sp); library(maptools); library(RColorBrewer); library(rgdal); library(lattice); library(spdep); library(Hmisc)
load("data/datos_completos_up.RData")
t<-length(unique(dist_vaw_up$ID_year))
t
Nyears<- t # years in Uttar Pradesh data
nbt<-list()
nbt[[1]]<-c(2)
nbt[[Nyears]]<-c(Nyears-1)
for(l in 2:(Nyears-1)){
nbt[[l]]<-c(l-1,l+1)
}
rm(l)
Q.g<-matrix(0, ncol=Nyears, nrow=Nyears)
for (i in 1:Nyears){
Q.g[i,i]=length(nbt[[i]])
Q.g[i,nbt[[i]]]=-1
}
# inversa generalizada de Q.gamma
Q.g_inv<-MASS::ginv(Q.g)
Q.g
Q.g<-matrix(0, ncol=Nyears, nrow=Nyears)
for (i in 1:Nyears){
Q.g[i,i]=length(nbt[[i]])
Q.g[i,nbt[[i]]]=-1
}
Q.g
setwd("D:/Gonzalo/Multivariado/district-multi/comparacion_INLAMSM_WinBUGS_FINAL/spato_temporal/codigo_GitHub/R")
load("dataMmodel.RData")
M<<
####################################
##  Data organization
####################################
## Crimes
crime<- c("rape", "dowry")
rm(list=ls())
load("dataMmodel.RData")
Mzz
names(data)
